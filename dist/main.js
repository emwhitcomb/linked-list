(()=>{"use strict";const e=function(e=null,n=null){return{value:e,next:n}},n={headNode:null,append(n){if(null==this.headNode)this.headNode=e(n);else{let t=this.headNode;for(;null!=t.next;)t=t.next;t.next=e(n)}},prepend(n){this.headNode=e(n,this.headNode)},size(){let e=0,n=this.headNode;for(;null!=n;)e++,n=n.next;return e},head(){return this.headNode.value},tail(){let e=this.headNode;for(;null!=e.next;)e=e.next;return e.value},at(e){let n=this.headNode;for(let t=0;t<e;t++)if(n=n.next,null==n)return"ERROR: Index greater than list length.";return n.value},pop(){let e,n=this.headNode;for(;null!=n.next;)e=n,n=n.next;e.next=null},contains(e){let n=this.headNode;for(;null!=n;){if(n.value==e)return!0;n=n.next}return!1},find(e){let n=this.headNode,t=0;for(;null!=n;){if(n.value==e)return t;n=n.next,t++}return"The value does not exist in the list"},toString(){let e="",n=this.headNode;for(;null!=n;)e+=`(${n.value}) -> `,n=n.next;return e+=n,e}};n.append(2),n.prepend(1),n.append(3),n.append(4),console.log(`toString(): ${n.toString()}`),console.log(`Number of nodes: ${n.size()}`),console.log(`First node: ${n.head()}`),console.log(`Last node: ${n.tail()}`),console.log(`Node at index = 2: ${n.at(2)}`),n.pop(),console.log(`List after pop(): ${n.toString()}`),console.log(`List contains 10: ${n.contains(10)}`),console.log(`List contains 3: ${n.contains(3)}`),console.log(`The index of the node containing 2: ${n.find(2)}`),console.log(`The index of the node containing 11: ${n.find(11)}`)})();